name: Branch tests
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [24]
        elixir: [1.12.1]
        database-name: ["journey"]
        database-user: ["postgres"]
        database-password: ["postgres"]
    services:
      postgres:
        image: postgres:13.3-buster
        env:
          POSTGRES_DB: ${{ matrix.database-name }}
          POSTGRES_USER: ${{ matrix.database-user }}
          POSTGRES_PASSWORD: ${{ matrix.database-password }}
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Cache dialyzer artifacts
        uses: actions/cache@v2
        env:
          cache-name: cache-dializer-builds
          MIX_HOME: .
        with:
          path: |
            priv/plts
            _build/dev/lib/journey/ebin/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('priv/plts/dialyzer_otp${{ matrix.otp }}_elixir${{ matrix.elixir }}.plt') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-elixir@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
      - name: Install deps
        run: |
          make install-dependencies
      - run: mix format --check-formatted
      - run: make build
      - run: make test
      - run: make dialyzer
